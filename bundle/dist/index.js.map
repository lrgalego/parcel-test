{"version":3,"sources":["node_modules/decamelize/index.js","node_modules/@test/pkg1/node_modules/decamelize/index.js","node_modules/@test/pkg1/index.js","node_modules/@test/pkg2/node_modules/decamelize/index.js","node_modules/@test/pkg2/index.js","index.js"],"names":["module","exports","text","separator","TypeError","replace","toLowerCase","console","log"],"mappings":"ACAA,AEAA,aFEAA,AEAAA,OFAOC,AEAAA,QFAU,AEAA,SFACC,AEAAA,GFAMC,AEAAA,IFAAA,AEAAA,EFAY,AEAA,UFAA,AEAA,OFAA,AEAA,QFAA,AEAA,IFAA,AEAA,UFAA,AEAA,GFAA,AEAA,UFAA,AEAA,GFAA,AEAA,IFC/B,AEAA,GFAkB,AEAA,iBFATD,AEAAA,GFA0C,AEAA,iBFAdC,AEAAA,EFClC,AEAA,MFAA,AEAA,IFAIC,AEAAA,UFAU,AEAA,mEFGdF,AEAAA,OFAAA,AEAAA,EFCLG,AEAAA,QFAQ,AEAA,q4RFA2DF,AEAAA,KFAAA,AEAAA,OFAAA,AEAAA,EFCnEE,AEAAA,OFAAA,AEAAA,QFAQ,AEAA,swaFA6EF,AEAAA,KFAAA,AEAAA,OFAAA,AEAAA,EFCrFG,AEAAA,OFAAA,AEAAA;AHVH,aAEAN,OAAOC,QAAU,SAACC,GAAMC,IAAAA,EAAY,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAC/B,GAAkB,iBAATD,GAA0C,iBAAdC,EAClC,MAAA,IAAIC,UAAU,mEAGdF,OAAAA,EACLG,QAAQ,q4RAA2DF,KAAAA,OAAAA,EACnEE,OAAAA,QAAQ,swaAA6EF,KAAAA,OAAAA,EACrFG,OAAAA;;AENF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJD,IAAA,EAAA,EAAA,QAAA,eAIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFc,IAAA,EAAA,KACbC,QAAQC,KAAI,EAAW,EAAA,SAAA,UACxB,QAAA,QAAA;;AEAA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJD,IAAA,EAAA,EAAA,QAAA,eAIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFc,IAAA,EAAA,KACbD,QAAQC,KAAI,EAAW,EAAA,SAAA,UACxB,QAAA,QAAA;;ACGD,aAPA,IAAA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eAKA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAHAD,QAAQC,IAAI,UACZD,QAAQC,KAAI,EAAW,EAAA,SAAA,YACvB,EAAA,EAAA,YACA,EAAA,EAAA","file":"index.js","sourceRoot":"..","sourcesContent":["'use strict';\n\nmodule.exports = (text, separator = '_') => {\n\tif (!(typeof text === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('The `text` and `separator` arguments should be of type `string`');\n\t}\n\n\treturn text\n\t\t.replace(/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu, `$1${separator}$2`)\n\t\t.replace(/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu, `$1${separator}$2`)\n\t\t.toLowerCase();\n};\n","'use strict';\n\nmodule.exports = (text, separator = '_') => {\n\tif (!(typeof text === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('The `text` and `separator` arguments should be of type `string`');\n\t}\n\n\treturn text\n\t\t.replace(/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu, `$1${separator}$2`)\n\t\t.replace(/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu, `$1${separator}$2`)\n\t\t.toLowerCase();\n};\n","import decamelize from \"decamelize\"\n\nexport default () => {\n  console.log(decamelize(\"pkg1\"))\n}\n","'use strict';\n\nmodule.exports = (text, separator = '_') => {\n\tif (!(typeof text === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('The `text` and `separator` arguments should be of type `string`');\n\t}\n\n\treturn text\n\t\t.replace(/([\\p{Lowercase_Letter}\\d])(\\p{Uppercase_Letter})/gu, `$1${separator}$2`)\n\t\t.replace(/(\\p{Uppercase_Letter}+)(\\p{Uppercase_Letter}\\p{Lowercase_Letter}+)/gu, `$1${separator}$2`)\n\t\t.toLowerCase();\n};\n","import decamelize from \"decamelize\"\n\nexport default () => {\n  console.log(decamelize(\"pkg2\"))\n}\n","import decamelize from \"decamelize\"\nimport pkg1 from \"@test/pkg1\"\nimport pkg2 from \"@test/pkg2\"\n\nconsole.log('loaded')\nconsole.log(decamelize('bunDle'))\npkg1();\npkg2();\n"]}